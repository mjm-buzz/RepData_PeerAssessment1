getwd()
unzip(activity.zip)
unzip(activity)
data <- reaad.csv("activity.csv", header = TRUE)
data <- read.csv("activity.csv", header = TRUE)
head(data)
nrow(data)
sum(data)
str(data)
summary(data)
quantile(data)
quintile(data)
quartile(data)
head(data)
class(data)
class(data$date)
class(data$steps)
class(data$interval)
dates <- as.Date(data$date)
?split
steps.per.day <- sapply(split(data$steps, data$date), sum)
mean(steps.per.day)
steps.per.day <- sapply(split(data$steps, data$date), sum)
hist(steps.per.day, col = "green")
steps.per.day <- sapply(split(data$steps, data$date), sum)
hist(steps.per.day, col = "green", main = "Total Number of Steps Taken per
Day", xlab = "Total Steps per Day")
mean.steps <- mean(steps.per.day, na.rim = TRUE)
median.steps <- median(steps.per.day, na.rim = TRUE)
mean.steps <- mean(steps.per.day, na.rm = TRUE)
median.steps <- median(steps.per.day, na.rm = TRUE)
mean.steps
media.steps
median.steps
head(data)
data
?plot
avg.steps <- sapply(split(data$steps, data$interval), mean, na.rm = TRUE)
plot(avg.steps, type = "l", main = "Average Daily Activity Pattern",
xlab = "5-Minute Interval", ylab = "Average Steps")
m <- sapply(split(avg.steps, data$interval), max)
complete.cases(data)
complete <- complete.cases(data)
class(complete)
v = complete[TRUE]
v
v = complete[complete == TRUE]
v
length(v)
sum(is.na(data))
sum(is.na(data$steps))
sum(is.na(data$interval))
sum(is.na(data$date))
sum(!complete.cases(data))
sum(!complete.cases(data))
names(avg.steps)[avg.steps == max(avg.steps)]
head(data)
test <- data
identical(test, data)
head(test)
is.na(test$steps) <- 5
head(test)
head(test$steps)
test$steps[is.na(test$steps)] <- 5
head(test$steps)
?split
nrow(data)
which(avg.steps == max(avg.steps))
steps.per.interval
steps.per.interval <- sapply(split(data$steps, data$interval), mean,
na.rm = TRUE)
plot(steps.per.interval, type = "l", main = "Average Daily Activity Pattern",
xlab = "5-Minute Interval", ylab = "Average Steps")
Which interval contains the maximum number of steps?
which(avg.steps == max(avg.steps))
steps.per.interval
ehad(data)
head(data)
class(steps.per.interval)
steps.per.interval[1]
steps.per.interval[2]
steps.per.interval[3]
complete.data <- data
for (i in 1:nrow(complete.data)) {
if (is.na(complete.data[i, "steps"])) {
interval = as.character(data.filled[i, "interval"])
data.filled[i, "steps"] = steps.per.interval[interval]
}
}
complete.data <- data
for (i in 1:nrow(complete.data)) {
if (is.na(complete.data[i, "steps"])) {
interval = as.character(complete.data[i, "interval"])
complete.data[i, "steps"] = steps.per.interval[interval]
}
}
which(avg.steps == max(avg.steps))
complete.steps.per.day = sapply(split(complete.data$steps,
complete.data$date), sum)
hist(complete.steps.per.day, col = "green", main = "Number of Steps per Day- no NA's")
complete.mean.steps <- mean(complete.steps.per.day)
complete.mean.steps
Median total number of steps per day:
complete.median.steps <- median(complete.steps.per.day)
complete.median.steps
complete.mean.steps <- mean(complete.steps.per.day)
complete.mean.steps
complete.median.steps <- median(complete.steps.per.day)
complete.median.steps
complete.data$weekday <- c("weekday")
complete.data[weekdays(as.Date(complete.data[, 2])) %in% c("Sunday",
"Saturday"), ][4] <- c("weekend")
complete.data$weekday <- factor(complete.data$weekday)
g <- split(dataFilled, dataFilled$weekday)
result <- lapply(g, function(df) tapply(df$steps, df$interval, mean))
datafinal <- data.frame(Interval = rep(interval, 2), stepsFilledAve = as.vector(unlist(result)),
DAY = factor(rep(c("weekday", "weekend"), each = 288)))
library(lattice)
xyplot(stepsFilledAve ~ Interval | DAY, data = datafinal, layout = c(1, 2),
type = "l", ylab = "Number of steps")
complete.data$weekday <- c("weekday")
complete.data[weekdays(as.Date(complete.data[, 2])) %in% c("Sunday",
"Saturday"), ][4] <- c("weekend")
complete.data$weekday <- factor(complete.data$weekday)
result <- lapply(split(complete.data, complete.data$weekday),
function(dframe) tapply(dframe$steps, dframe$interval, mean))
plot.data <- data.frame(Interval = rep(interval, 2), stepsFilledAve = as.vector(unlist(result)), DAY = factor(rep(c("weekday", "weekend"), each = 288)))
library(lattice)
xyplot(stepsFilledAve ~ Interval | DAY, data = plot.data, layout = c(1, 2),
type = "l", ylab = "Number of steps")
result <- lapply(split(complete.data, complete.data$weekday),
function(dframe) tapply(dframe$steps, dframe$interval, mean))
plot.data <- data.frame(Interval = rep(interval, 2), stepsFilledAve = as.vector(unlist(result)), DAY = factor(rep(c("weekday", "weekend"), each = 288)))
library(lattice)
xyplot(stepsFilledAve ~ Interval | DAY, data = plot.data, layout = c(1, 2),
type = "l", ylab = "Number of steps")
complete.data$weekday <- weekdays(as.Date(complete.data$date, format = "%Y-%m-%d"))
complete.data$weekday.type <- factor(ifelse(complete.data$weekday == "Sunday" | complete.data$weekday ==
"Saturday", "weekend", "weekday"), levels = c("weekday", "weekend"))
complete.data.weekdays <- complete.data[complete.data$weekday.type == "weekday", ]
complete.data.weekend <- complete.data[complete.data$weekday.type == "weekend", ]
weekday.steps <- sapply(split(complete.data.weekdays$steps,
complete.data.weekdays$interval), mean)
weekend.steps <- sapply(split(complete.data.weekend$steps,
complete.data.weekend$interval), mean)
par(mfrow = c(2, 1), mar = c(4, 5, 2, 2))
plot(weekend.steps, type = "l", yaxt = "n", ylim = c(0,
250), xlim = c(0, 300), main = "weekend", ylab = "", xlab = "Interval")
axis(side = 4, at = seq(0, 250, 50), labels = seq(0, 250, 50))
plot(weekday.steps, type = "l", ylim = c(0, 250), xlim = c(0,
300), main = "weekday", ylab = "", xlab = "Interval")
par(mfrow = c(1, 1), mar = c(3, 2, 2, 2))
mtext(text = "Number of steps", side = 2)
par(mar = c(5, 5, 5, 2))
par(mfrow = c(2, 1), mar = c(4, 5, 2, 2))
plot(weekend.steps, type = "l", yaxt = "n", ylim = c(0,
250), xlim = c(0, 300), main = "weekend", ylab = "", xlab = "Interval")
#axis(side = 4, at = seq(0, 250, 50), labels = seq(0, 250, 50))
plot(weekday.steps, type = "l", ylim = c(0, 250), xlim = c(0,
300), main = "weekday", ylab = "", xlab = "Interval")
par(mfrow = c(1, 1), mar = c(3, 2, 2, 2))
mtext(text = "Number of steps", side = 2)
par(mar = c(5, 5, 5, 2))
par(mfrow = c(2, 1), mar = c(4, 5, 2, 2))
plot(weekend.steps, type = "l", main = "weekend", ylab = "", xlab = "Interval")
plot(weekday.steps, type = "l", ylim = c(0, 250), xlim = c(0,
300), main = "weekday", ylab = "", xlab = "Interval")
par(mfrow = c(1, 1), mar = c(3, 2, 2, 2))
mtext(text = "Number of steps", side = 2)
par(mar = c(5, 5, 5, 2))
par(mfrow = c(2, 1), mar = c(4, 5, 2, 2))
plot(weekend.steps, type = "l", main = "Weekend", ylab = "", xlab = "Interval")
plot(weekday.steps, type = "l", , main = "Weekday", ylab = "", xlab = "Interval")
par(mfrow = c(1, 1), mar = c(3, 2, 2, 2))
mtext(text = "Number of steps", side = 2)
par(mar = c(5, 5, 5, 2))
